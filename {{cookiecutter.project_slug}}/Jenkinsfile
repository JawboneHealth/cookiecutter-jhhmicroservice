node {
    def app

    stage('Clone repository') {

        checkout scm
    }

    stage('Build image') {

        app = docker.build("{{ cookiecutter.project_slug }}")
    }

    stage('Test image') {
        /* Ideally, we would run a test framework against our image.
         * For this example, we're using a Volkswagen-type approach ;-) */

        app.inside {
            sh 'pytest tests/unit'
        }
    }

    // notifySuccessful()

    stage('Push image') {
        /* Finally, we'll push the image with two tags:
         * First, the incremental build number from Jenkins
         * Second, the 'latest' tag.
         * Pushing multiple tags is cheap, as all the layers are reused. */
        docker.withRegistry('https://docker.aliph.com', 'docker.aliph.com') {
            app.push("${env.BUILD_NUMBER}")
            app.push("dev")
        }
    }
}

def notifySuccessful() { 
   hipchatSend (color: 'GREEN', notify: true,
       message: "SUCCESSFUL: container ship '${env.JOB_NAME} [${env.BUILD_NUMBER}]' ${env.BUILD_URL} ${env.GIT_BRANCH} ${env.GIT_REVISION} ${env.COMMIT_MESSAGE}"
     )
}
